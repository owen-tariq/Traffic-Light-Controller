// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/08/2024 12:11:42"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    MyProject_TrafficLight
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module MyProject_TrafficLight_vlg_sample_tst(
	clk,
	clr,
	sampler_tx
);
input  clk;
input  clr;
output sampler_tx;

reg sample;
time current_time;
always @(clk or clr)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
    if ($realtime == 0 || $realtime != current_time)  
    begin                                             
        if (sample === 1'bx)                          
            sample = 0;                               
        else                                          
            sample = ~sample;                         
    end                                               
    current_time = $realtime;                         
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module MyProject_TrafficLight_vlg_check_tst (
	pin_name2,
	pin_name4,
	pin_name5,
	pin_name6,
	pin_name7,
	pin_name8,
	pin_name9,
	pin_name10,
	pin_name11,
	pin_name12,
	pin_name13,
	pin_name14,
	pin_name15,
	pin_name16,
	pin_name17,
	pin_name18,
	pin_name19,
	pin_name20,
	pin_name21,
	pin_name22,
	pin_name23,
	pin_name24,
	pin_name25,
	pin_name26,
	pin_name27,
	pin_name28,
	pin_name29,
	sampler_rx
);
input  pin_name2;
input  pin_name4;
input  pin_name5;
input  pin_name6;
input  pin_name7;
input  pin_name8;
input  pin_name9;
input  pin_name10;
input  pin_name11;
input  pin_name12;
input  pin_name13;
input  pin_name14;
input  pin_name15;
input  pin_name16;
input  pin_name17;
input  pin_name18;
input  pin_name19;
input  pin_name20;
input  pin_name21;
input  pin_name22;
input  pin_name23;
input  pin_name24;
input  pin_name25;
input  pin_name26;
input  pin_name27;
input  pin_name28;
input  pin_name29;
input sampler_rx;

reg  pin_name2_expected;
reg  pin_name4_expected;
reg  pin_name5_expected;
reg  pin_name6_expected;
reg  pin_name7_expected;
reg  pin_name8_expected;
reg  pin_name9_expected;
reg  pin_name10_expected;
reg  pin_name11_expected;
reg  pin_name12_expected;
reg  pin_name13_expected;
reg  pin_name14_expected;
reg  pin_name15_expected;
reg  pin_name16_expected;
reg  pin_name17_expected;
reg  pin_name18_expected;
reg  pin_name19_expected;
reg  pin_name20_expected;
reg  pin_name21_expected;
reg  pin_name22_expected;
reg  pin_name23_expected;
reg  pin_name24_expected;
reg  pin_name25_expected;
reg  pin_name26_expected;
reg  pin_name27_expected;
reg  pin_name28_expected;
reg  pin_name29_expected;

reg  pin_name2_prev;
reg  pin_name4_prev;
reg  pin_name5_prev;
reg  pin_name6_prev;
reg  pin_name7_prev;
reg  pin_name8_prev;
reg  pin_name9_prev;
reg  pin_name10_prev;
reg  pin_name11_prev;
reg  pin_name12_prev;
reg  pin_name13_prev;
reg  pin_name14_prev;
reg  pin_name15_prev;
reg  pin_name16_prev;
reg  pin_name17_prev;
reg  pin_name18_prev;
reg  pin_name19_prev;
reg  pin_name20_prev;
reg  pin_name21_prev;
reg  pin_name22_prev;
reg  pin_name23_prev;
reg  pin_name24_prev;
reg  pin_name25_prev;
reg  pin_name26_prev;
reg  pin_name27_prev;
reg  pin_name28_prev;
reg  pin_name29_prev;

reg  pin_name2_expected_prev;
reg  pin_name4_expected_prev;
reg  pin_name5_expected_prev;
reg  pin_name6_expected_prev;
reg  pin_name7_expected_prev;
reg  pin_name8_expected_prev;
reg  pin_name9_expected_prev;
reg  pin_name10_expected_prev;
reg  pin_name11_expected_prev;
reg  pin_name12_expected_prev;
reg  pin_name13_expected_prev;
reg  pin_name14_expected_prev;
reg  pin_name15_expected_prev;
reg  pin_name16_expected_prev;
reg  pin_name17_expected_prev;
reg  pin_name18_expected_prev;
reg  pin_name19_expected_prev;
reg  pin_name20_expected_prev;
reg  pin_name21_expected_prev;
reg  pin_name22_expected_prev;
reg  pin_name23_expected_prev;
reg  pin_name24_expected_prev;
reg  pin_name25_expected_prev;
reg  pin_name26_expected_prev;
reg  pin_name27_expected_prev;
reg  pin_name28_expected_prev;
reg  pin_name29_expected_prev;

reg  last_pin_name2_exp;
reg  last_pin_name4_exp;
reg  last_pin_name5_exp;
reg  last_pin_name6_exp;
reg  last_pin_name7_exp;
reg  last_pin_name8_exp;
reg  last_pin_name9_exp;
reg  last_pin_name10_exp;
reg  last_pin_name11_exp;
reg  last_pin_name12_exp;
reg  last_pin_name13_exp;
reg  last_pin_name14_exp;
reg  last_pin_name15_exp;
reg  last_pin_name16_exp;
reg  last_pin_name17_exp;
reg  last_pin_name18_exp;
reg  last_pin_name19_exp;
reg  last_pin_name20_exp;
reg  last_pin_name21_exp;
reg  last_pin_name22_exp;
reg  last_pin_name23_exp;
reg  last_pin_name24_exp;
reg  last_pin_name25_exp;
reg  last_pin_name26_exp;
reg  last_pin_name27_exp;
reg  last_pin_name28_exp;
reg  last_pin_name29_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:27] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 27'b1;
end

// update real /o prevs

always @(trigger)
begin
	pin_name2_prev = pin_name2;
	pin_name4_prev = pin_name4;
	pin_name5_prev = pin_name5;
	pin_name6_prev = pin_name6;
	pin_name7_prev = pin_name7;
	pin_name8_prev = pin_name8;
	pin_name9_prev = pin_name9;
	pin_name10_prev = pin_name10;
	pin_name11_prev = pin_name11;
	pin_name12_prev = pin_name12;
	pin_name13_prev = pin_name13;
	pin_name14_prev = pin_name14;
	pin_name15_prev = pin_name15;
	pin_name16_prev = pin_name16;
	pin_name17_prev = pin_name17;
	pin_name18_prev = pin_name18;
	pin_name19_prev = pin_name19;
	pin_name20_prev = pin_name20;
	pin_name21_prev = pin_name21;
	pin_name22_prev = pin_name22;
	pin_name23_prev = pin_name23;
	pin_name24_prev = pin_name24;
	pin_name25_prev = pin_name25;
	pin_name26_prev = pin_name26;
	pin_name27_prev = pin_name27;
	pin_name28_prev = pin_name28;
	pin_name29_prev = pin_name29;
end

// update expected /o prevs

always @(trigger)
begin
	pin_name2_expected_prev = pin_name2_expected;
	pin_name4_expected_prev = pin_name4_expected;
	pin_name5_expected_prev = pin_name5_expected;
	pin_name6_expected_prev = pin_name6_expected;
	pin_name7_expected_prev = pin_name7_expected;
	pin_name8_expected_prev = pin_name8_expected;
	pin_name9_expected_prev = pin_name9_expected;
	pin_name10_expected_prev = pin_name10_expected;
	pin_name11_expected_prev = pin_name11_expected;
	pin_name12_expected_prev = pin_name12_expected;
	pin_name13_expected_prev = pin_name13_expected;
	pin_name14_expected_prev = pin_name14_expected;
	pin_name15_expected_prev = pin_name15_expected;
	pin_name16_expected_prev = pin_name16_expected;
	pin_name17_expected_prev = pin_name17_expected;
	pin_name18_expected_prev = pin_name18_expected;
	pin_name19_expected_prev = pin_name19_expected;
	pin_name20_expected_prev = pin_name20_expected;
	pin_name21_expected_prev = pin_name21_expected;
	pin_name22_expected_prev = pin_name22_expected;
	pin_name23_expected_prev = pin_name23_expected;
	pin_name24_expected_prev = pin_name24_expected;
	pin_name25_expected_prev = pin_name25_expected;
	pin_name26_expected_prev = pin_name26_expected;
	pin_name27_expected_prev = pin_name27_expected;
	pin_name28_expected_prev = pin_name28_expected;
	pin_name29_expected_prev = pin_name29_expected;
end



// expected pin_name2
initial
begin
	pin_name2_expected = 1'bX;
end 

// expected pin_name4
initial
begin
	pin_name4_expected = 1'bX;
end 

// expected pin_name5
initial
begin
	pin_name5_expected = 1'bX;
end 

// expected pin_name6
initial
begin
	pin_name6_expected = 1'bX;
end 

// expected pin_name7
initial
begin
	pin_name7_expected = 1'bX;
end 

// expected pin_name8
initial
begin
	pin_name8_expected = 1'bX;
end 

// expected pin_name9
initial
begin
	pin_name9_expected = 1'bX;
end 

// expected pin_name10
initial
begin
	pin_name10_expected = 1'bX;
end 

// expected pin_name11
initial
begin
	pin_name11_expected = 1'bX;
end 

// expected pin_name12
initial
begin
	pin_name12_expected = 1'bX;
end 

// expected pin_name14
initial
begin
	pin_name14_expected = 1'bX;
end 

// expected pin_name13
initial
begin
	pin_name13_expected = 1'bX;
end 

// expected pin_name15
initial
begin
	pin_name15_expected = 1'bX;
end 

// expected pin_name17
initial
begin
	pin_name17_expected = 1'bX;
end 

// expected pin_name16
initial
begin
	pin_name16_expected = 1'bX;
end 

// expected pin_name18
initial
begin
	pin_name18_expected = 1'bX;
end 

// expected pin_name20
initial
begin
	pin_name20_expected = 1'bX;
end 

// expected pin_name19
initial
begin
	pin_name19_expected = 1'bX;
end 

// expected pin_name21
initial
begin
	pin_name21_expected = 1'bX;
end 

// expected pin_name22
initial
begin
	pin_name22_expected = 1'bX;
end 

// expected pin_name23
initial
begin
	pin_name23_expected = 1'bX;
end 

// expected pin_name24
initial
begin
	pin_name24_expected = 1'bX;
end 

// expected pin_name25
initial
begin
	pin_name25_expected = 1'bX;
end 

// expected pin_name26
initial
begin
	pin_name26_expected = 1'bX;
end 

// expected pin_name27
initial
begin
	pin_name27_expected = 1'bX;
end 

// expected pin_name28
initial
begin
	pin_name28_expected = 1'bX;
end 

// expected pin_name29
initial
begin
	pin_name29_expected = 1'bX;
end 
// generate trigger
always @(pin_name2_expected or pin_name2 or pin_name4_expected or pin_name4 or pin_name5_expected or pin_name5 or pin_name6_expected or pin_name6 or pin_name7_expected or pin_name7 or pin_name8_expected or pin_name8 or pin_name9_expected or pin_name9 or pin_name10_expected or pin_name10 or pin_name11_expected or pin_name11 or pin_name12_expected or pin_name12 or pin_name13_expected or pin_name13 or pin_name14_expected or pin_name14 or pin_name15_expected or pin_name15 or pin_name16_expected or pin_name16 or pin_name17_expected or pin_name17 or pin_name18_expected or pin_name18 or pin_name19_expected or pin_name19 or pin_name20_expected or pin_name20 or pin_name21_expected or pin_name21 or pin_name22_expected or pin_name22 or pin_name23_expected or pin_name23 or pin_name24_expected or pin_name24 or pin_name25_expected or pin_name25 or pin_name26_expected or pin_name26 or pin_name27_expected or pin_name27 or pin_name28_expected or pin_name28 or pin_name29_expected or pin_name29)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected pin_name2 = %b | expected pin_name4 = %b | expected pin_name5 = %b | expected pin_name6 = %b | expected pin_name7 = %b | expected pin_name8 = %b | expected pin_name9 = %b | expected pin_name10 = %b | expected pin_name11 = %b | expected pin_name12 = %b | expected pin_name13 = %b | expected pin_name14 = %b | expected pin_name15 = %b | expected pin_name16 = %b | expected pin_name17 = %b | expected pin_name18 = %b | expected pin_name19 = %b | expected pin_name20 = %b | expected pin_name21 = %b | expected pin_name22 = %b | expected pin_name23 = %b | expected pin_name24 = %b | expected pin_name25 = %b | expected pin_name26 = %b | expected pin_name27 = %b | expected pin_name28 = %b | expected pin_name29 = %b | ",pin_name2_expected_prev,pin_name4_expected_prev,pin_name5_expected_prev,pin_name6_expected_prev,pin_name7_expected_prev,pin_name8_expected_prev,pin_name9_expected_prev,pin_name10_expected_prev,pin_name11_expected_prev,pin_name12_expected_prev,pin_name13_expected_prev,pin_name14_expected_prev,pin_name15_expected_prev,pin_name16_expected_prev,pin_name17_expected_prev,pin_name18_expected_prev,pin_name19_expected_prev,pin_name20_expected_prev,pin_name21_expected_prev,pin_name22_expected_prev,pin_name23_expected_prev,pin_name24_expected_prev,pin_name25_expected_prev,pin_name26_expected_prev,pin_name27_expected_prev,pin_name28_expected_prev,pin_name29_expected_prev);
	$display("| real pin_name2 = %b | real pin_name4 = %b | real pin_name5 = %b | real pin_name6 = %b | real pin_name7 = %b | real pin_name8 = %b | real pin_name9 = %b | real pin_name10 = %b | real pin_name11 = %b | real pin_name12 = %b | real pin_name13 = %b | real pin_name14 = %b | real pin_name15 = %b | real pin_name16 = %b | real pin_name17 = %b | real pin_name18 = %b | real pin_name19 = %b | real pin_name20 = %b | real pin_name21 = %b | real pin_name22 = %b | real pin_name23 = %b | real pin_name24 = %b | real pin_name25 = %b | real pin_name26 = %b | real pin_name27 = %b | real pin_name28 = %b | real pin_name29 = %b | ",pin_name2_prev,pin_name4_prev,pin_name5_prev,pin_name6_prev,pin_name7_prev,pin_name8_prev,pin_name9_prev,pin_name10_prev,pin_name11_prev,pin_name12_prev,pin_name13_prev,pin_name14_prev,pin_name15_prev,pin_name16_prev,pin_name17_prev,pin_name18_prev,pin_name19_prev,pin_name20_prev,pin_name21_prev,pin_name22_prev,pin_name23_prev,pin_name24_prev,pin_name25_prev,pin_name26_prev,pin_name27_prev,pin_name28_prev,pin_name29_prev);
`endif
	if (
		( pin_name2_expected_prev !== 1'bx ) && ( pin_name2_prev !== pin_name2_expected_prev )
		&& ((pin_name2_expected_prev !== last_pin_name2_exp) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name2 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name2_expected_prev);
		$display ("     Real value = %b", pin_name2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_pin_name2_exp = pin_name2_expected_prev;
	end
	if (
		( pin_name4_expected_prev !== 1'bx ) && ( pin_name4_prev !== pin_name4_expected_prev )
		&& ((pin_name4_expected_prev !== last_pin_name4_exp) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name4 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name4_expected_prev);
		$display ("     Real value = %b", pin_name4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_pin_name4_exp = pin_name4_expected_prev;
	end
	if (
		( pin_name5_expected_prev !== 1'bx ) && ( pin_name5_prev !== pin_name5_expected_prev )
		&& ((pin_name5_expected_prev !== last_pin_name5_exp) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name5 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name5_expected_prev);
		$display ("     Real value = %b", pin_name5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_pin_name5_exp = pin_name5_expected_prev;
	end
	if (
		( pin_name6_expected_prev !== 1'bx ) && ( pin_name6_prev !== pin_name6_expected_prev )
		&& ((pin_name6_expected_prev !== last_pin_name6_exp) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name6 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name6_expected_prev);
		$display ("     Real value = %b", pin_name6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_pin_name6_exp = pin_name6_expected_prev;
	end
	if (
		( pin_name7_expected_prev !== 1'bx ) && ( pin_name7_prev !== pin_name7_expected_prev )
		&& ((pin_name7_expected_prev !== last_pin_name7_exp) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name7 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name7_expected_prev);
		$display ("     Real value = %b", pin_name7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_pin_name7_exp = pin_name7_expected_prev;
	end
	if (
		( pin_name8_expected_prev !== 1'bx ) && ( pin_name8_prev !== pin_name8_expected_prev )
		&& ((pin_name8_expected_prev !== last_pin_name8_exp) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name8 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name8_expected_prev);
		$display ("     Real value = %b", pin_name8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_pin_name8_exp = pin_name8_expected_prev;
	end
	if (
		( pin_name9_expected_prev !== 1'bx ) && ( pin_name9_prev !== pin_name9_expected_prev )
		&& ((pin_name9_expected_prev !== last_pin_name9_exp) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name9 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name9_expected_prev);
		$display ("     Real value = %b", pin_name9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_pin_name9_exp = pin_name9_expected_prev;
	end
	if (
		( pin_name10_expected_prev !== 1'bx ) && ( pin_name10_prev !== pin_name10_expected_prev )
		&& ((pin_name10_expected_prev !== last_pin_name10_exp) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name10 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name10_expected_prev);
		$display ("     Real value = %b", pin_name10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_pin_name10_exp = pin_name10_expected_prev;
	end
	if (
		( pin_name11_expected_prev !== 1'bx ) && ( pin_name11_prev !== pin_name11_expected_prev )
		&& ((pin_name11_expected_prev !== last_pin_name11_exp) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name11 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name11_expected_prev);
		$display ("     Real value = %b", pin_name11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_pin_name11_exp = pin_name11_expected_prev;
	end
	if (
		( pin_name12_expected_prev !== 1'bx ) && ( pin_name12_prev !== pin_name12_expected_prev )
		&& ((pin_name12_expected_prev !== last_pin_name12_exp) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name12 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name12_expected_prev);
		$display ("     Real value = %b", pin_name12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_pin_name12_exp = pin_name12_expected_prev;
	end
	if (
		( pin_name13_expected_prev !== 1'bx ) && ( pin_name13_prev !== pin_name13_expected_prev )
		&& ((pin_name13_expected_prev !== last_pin_name13_exp) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name13 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name13_expected_prev);
		$display ("     Real value = %b", pin_name13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_pin_name13_exp = pin_name13_expected_prev;
	end
	if (
		( pin_name14_expected_prev !== 1'bx ) && ( pin_name14_prev !== pin_name14_expected_prev )
		&& ((pin_name14_expected_prev !== last_pin_name14_exp) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name14 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name14_expected_prev);
		$display ("     Real value = %b", pin_name14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_pin_name14_exp = pin_name14_expected_prev;
	end
	if (
		( pin_name15_expected_prev !== 1'bx ) && ( pin_name15_prev !== pin_name15_expected_prev )
		&& ((pin_name15_expected_prev !== last_pin_name15_exp) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name15 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name15_expected_prev);
		$display ("     Real value = %b", pin_name15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_pin_name15_exp = pin_name15_expected_prev;
	end
	if (
		( pin_name16_expected_prev !== 1'bx ) && ( pin_name16_prev !== pin_name16_expected_prev )
		&& ((pin_name16_expected_prev !== last_pin_name16_exp) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name16 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name16_expected_prev);
		$display ("     Real value = %b", pin_name16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_pin_name16_exp = pin_name16_expected_prev;
	end
	if (
		( pin_name17_expected_prev !== 1'bx ) && ( pin_name17_prev !== pin_name17_expected_prev )
		&& ((pin_name17_expected_prev !== last_pin_name17_exp) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name17 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name17_expected_prev);
		$display ("     Real value = %b", pin_name17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_pin_name17_exp = pin_name17_expected_prev;
	end
	if (
		( pin_name18_expected_prev !== 1'bx ) && ( pin_name18_prev !== pin_name18_expected_prev )
		&& ((pin_name18_expected_prev !== last_pin_name18_exp) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name18 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name18_expected_prev);
		$display ("     Real value = %b", pin_name18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_pin_name18_exp = pin_name18_expected_prev;
	end
	if (
		( pin_name19_expected_prev !== 1'bx ) && ( pin_name19_prev !== pin_name19_expected_prev )
		&& ((pin_name19_expected_prev !== last_pin_name19_exp) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name19 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name19_expected_prev);
		$display ("     Real value = %b", pin_name19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_pin_name19_exp = pin_name19_expected_prev;
	end
	if (
		( pin_name20_expected_prev !== 1'bx ) && ( pin_name20_prev !== pin_name20_expected_prev )
		&& ((pin_name20_expected_prev !== last_pin_name20_exp) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name20 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name20_expected_prev);
		$display ("     Real value = %b", pin_name20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_pin_name20_exp = pin_name20_expected_prev;
	end
	if (
		( pin_name21_expected_prev !== 1'bx ) && ( pin_name21_prev !== pin_name21_expected_prev )
		&& ((pin_name21_expected_prev !== last_pin_name21_exp) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name21 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name21_expected_prev);
		$display ("     Real value = %b", pin_name21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_pin_name21_exp = pin_name21_expected_prev;
	end
	if (
		( pin_name22_expected_prev !== 1'bx ) && ( pin_name22_prev !== pin_name22_expected_prev )
		&& ((pin_name22_expected_prev !== last_pin_name22_exp) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name22 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name22_expected_prev);
		$display ("     Real value = %b", pin_name22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_pin_name22_exp = pin_name22_expected_prev;
	end
	if (
		( pin_name23_expected_prev !== 1'bx ) && ( pin_name23_prev !== pin_name23_expected_prev )
		&& ((pin_name23_expected_prev !== last_pin_name23_exp) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name23 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name23_expected_prev);
		$display ("     Real value = %b", pin_name23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_pin_name23_exp = pin_name23_expected_prev;
	end
	if (
		( pin_name24_expected_prev !== 1'bx ) && ( pin_name24_prev !== pin_name24_expected_prev )
		&& ((pin_name24_expected_prev !== last_pin_name24_exp) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name24 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name24_expected_prev);
		$display ("     Real value = %b", pin_name24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_pin_name24_exp = pin_name24_expected_prev;
	end
	if (
		( pin_name25_expected_prev !== 1'bx ) && ( pin_name25_prev !== pin_name25_expected_prev )
		&& ((pin_name25_expected_prev !== last_pin_name25_exp) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name25 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name25_expected_prev);
		$display ("     Real value = %b", pin_name25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_pin_name25_exp = pin_name25_expected_prev;
	end
	if (
		( pin_name26_expected_prev !== 1'bx ) && ( pin_name26_prev !== pin_name26_expected_prev )
		&& ((pin_name26_expected_prev !== last_pin_name26_exp) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name26 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name26_expected_prev);
		$display ("     Real value = %b", pin_name26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_pin_name26_exp = pin_name26_expected_prev;
	end
	if (
		( pin_name27_expected_prev !== 1'bx ) && ( pin_name27_prev !== pin_name27_expected_prev )
		&& ((pin_name27_expected_prev !== last_pin_name27_exp) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name27 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name27_expected_prev);
		$display ("     Real value = %b", pin_name27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_pin_name27_exp = pin_name27_expected_prev;
	end
	if (
		( pin_name28_expected_prev !== 1'bx ) && ( pin_name28_prev !== pin_name28_expected_prev )
		&& ((pin_name28_expected_prev !== last_pin_name28_exp) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name28 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name28_expected_prev);
		$display ("     Real value = %b", pin_name28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_pin_name28_exp = pin_name28_expected_prev;
	end
	if (
		( pin_name29_expected_prev !== 1'bx ) && ( pin_name29_prev !== pin_name29_expected_prev )
		&& ((pin_name29_expected_prev !== last_pin_name29_exp) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port pin_name29 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", pin_name29_expected_prev);
		$display ("     Real value = %b", pin_name29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_pin_name29_exp = pin_name29_expected_prev;
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module MyProject_TrafficLight_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg clr;
// wires                                               
wire pin_name2;
wire pin_name4;
wire pin_name5;
wire pin_name6;
wire pin_name7;
wire pin_name8;
wire pin_name9;
wire pin_name10;
wire pin_name11;
wire pin_name12;
wire pin_name13;
wire pin_name14;
wire pin_name15;
wire pin_name16;
wire pin_name17;
wire pin_name18;
wire pin_name19;
wire pin_name20;
wire pin_name21;
wire pin_name22;
wire pin_name23;
wire pin_name24;
wire pin_name25;
wire pin_name26;
wire pin_name27;
wire pin_name28;
wire pin_name29;

wire sampler;                             

// assign statements (if any)                          
MyProject_TrafficLight i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.clr(clr),
	.pin_name2(pin_name2),
	.pin_name4(pin_name4),
	.pin_name5(pin_name5),
	.pin_name6(pin_name6),
	.pin_name7(pin_name7),
	.pin_name8(pin_name8),
	.pin_name9(pin_name9),
	.pin_name10(pin_name10),
	.pin_name11(pin_name11),
	.pin_name12(pin_name12),
	.pin_name13(pin_name13),
	.pin_name14(pin_name14),
	.pin_name15(pin_name15),
	.pin_name16(pin_name16),
	.pin_name17(pin_name17),
	.pin_name18(pin_name18),
	.pin_name19(pin_name19),
	.pin_name20(pin_name20),
	.pin_name21(pin_name21),
	.pin_name22(pin_name22),
	.pin_name23(pin_name23),
	.pin_name24(pin_name24),
	.pin_name25(pin_name25),
	.pin_name26(pin_name26),
	.pin_name27(pin_name27),
	.pin_name28(pin_name28),
	.pin_name29(pin_name29)
);

// clk
initial
begin
	repeat(8)
	begin
		clk = 1'b0;
		clk = #60000 1'b1;
		# 60000;
	end
	clk = 1'b0;
end 

// clr
initial
begin
	repeat(8)
	begin
		clr = 1'b0;
		clr = #60000 1'b1;
		# 60000;
	end
	clr = 1'b0;
end 

MyProject_TrafficLight_vlg_sample_tst tb_sample (
	.clk(clk),
	.clr(clr),
	.sampler_tx(sampler)
);

MyProject_TrafficLight_vlg_check_tst tb_out(
	.pin_name2(pin_name2),
	.pin_name4(pin_name4),
	.pin_name5(pin_name5),
	.pin_name6(pin_name6),
	.pin_name7(pin_name7),
	.pin_name8(pin_name8),
	.pin_name9(pin_name9),
	.pin_name10(pin_name10),
	.pin_name11(pin_name11),
	.pin_name12(pin_name12),
	.pin_name13(pin_name13),
	.pin_name14(pin_name14),
	.pin_name15(pin_name15),
	.pin_name16(pin_name16),
	.pin_name17(pin_name17),
	.pin_name18(pin_name18),
	.pin_name19(pin_name19),
	.pin_name20(pin_name20),
	.pin_name21(pin_name21),
	.pin_name22(pin_name22),
	.pin_name23(pin_name23),
	.pin_name24(pin_name24),
	.pin_name25(pin_name25),
	.pin_name26(pin_name26),
	.pin_name27(pin_name27),
	.pin_name28(pin_name28),
	.pin_name29(pin_name29),
	.sampler_rx(sampler)
);
endmodule

